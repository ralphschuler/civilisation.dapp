// SPDX-License-Identifier: MIT
pragma solidity ^0.8.30;

/// @title IWorldID
/// @notice Interface for verifying World ID zero-knowledge proofs.
/// @dev This contract defines the minimal external verifier function for World ID.
///      Note: double-signaling protection (nullifier reuse checks) must be handled by the caller.
interface IWorldID {
    /// @notice Verifies a zero-knowledge proof generated by World ID.
    /// @dev Reverts if the proof is invalid.
    ///      Does not enforce double-signaling checks; implement this in your contract logic.
    /// @param root The Merkle root of the Semaphore group tree.
    /// @param groupId The ID of the Semaphore group.
    /// @param signalHash The keccak256 hash of the Semaphore signal.
    /// @param nullifierHash The nullifier hash to prevent proof reuse.
    /// @param externalNullifierHash The keccak256 hash of the external nullifier.
    /// @param proof The zero-knowledge proof array (8 elements).
    function verifyProof(
        uint256 root,
        uint256 groupId,
        uint256 signalHash,
        uint256 nullifierHash,
        uint256 externalNullifierHash,
        uint256[8] calldata proof
    ) external view;
}
